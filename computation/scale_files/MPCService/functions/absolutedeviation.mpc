from Compiler import input_output
from Compiler import lin_alg

l = LEN
dim = [LEN / COLS, COLS]

def mean(M):
    cols = len(M[0])
    rows = len(M)
    avg = lin_alg.constant_vector(cols, 0)
    @for_range(rows)
    def f(i):
        @for_range(cols)
        def g(j):
            avg[j] = avg[j] + M[i][j]
    @for_range(cols)
    def g(j):
        avg[j] = avg[j] / rows
    return avg

def abs_deviation(M):
    cols = len(M[0])
    rows = len(M)
    mean_vec = mean(M)
    abs_dev = lin_alg.constant_vector(cols, 0)
    @for_range(rows)
    def f(i):
        @for_range(cols)
        def g(j):
            abs_dev[j] = abs_dev[j] + abs(M[i][j]-mean_vec[j])
    @for_range(cols)
    def g(j):
        abs_dev[j] = abs_dev[j] / rows
    return abs_dev

X = input_output.load_sfix_matrix(dim[0], dim[1])
res = abs_deviation(X)
input_output.output_sfix_array(res)